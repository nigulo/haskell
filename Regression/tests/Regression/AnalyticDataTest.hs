{-# OPTIONS_GHC -F -pgmF htfpp #-}

module Regression.AnalyticDataTest where

import Regression.AnalyticData as AD
import Math.Function as F
import Test.Framework
import System.Random
import qualified Data.Vector.Unboxed as V

test_constantOp = do
    g <- getStdGen 
    let
        func :: F.Function Double = F.function "cos(x)"
        ad = AD.AnalyticData [([0], [100], func)]
        result = AD.getExtrema 100000 (Just 6.28) g ad
        expectedResult = read "(fromList [(3.141999999999765,-0.9999999170344522),(9.424952380952112,-0.9999999847887999),(15.707904761904325,-0.9999999982885214),(21.990857142857077,-0.9999999575336159),(28.27480952380983,-0.9999998868825831),(34.55776190476204,-0.999999970544648),(40.84071428571372,-0.9999999999520873),(47.12366666666541,-0.9999999751048992),(53.40661904761709,-0.9999998960030851),(59.690571428568774,-0.9999999516362775),(65.97352380952152,-0.9999999969514338),(72.25647619047534,-0.9999999880119637),(78.53942857142916,-0.9999999248178676),(84.82338095238298,-0.9999999280636854),(91.10633333333679,-0.9999999892865601),(97.38928571429061,-0.999999996254809)],fromList [(6.283476190476006,0.9999999576934542),(12.566428571428219,0.999999998320489),(18.849380952380702,0.9999999846928969),(25.132333333333452,0.9999999168106787),(31.416285714286204,0.9999999354954434),(37.69923809523788,0.999999992030196),(43.982190476189565,0.9999999943103217),(50.26514285714125,0.9999999423358202),(56.54909523809293,0.9999999086332148),(62.832047619044616,0.9999999810756841),(69.11499999999843,0.999999999263527),(75.39795238095225,0.9999999631967437),(81.68190476190607,0.9999998771067643),(87.96485714285988,0.9999999654569509),(94.2478095238137,0.9999999995525128)])"
    assertEqual expectedResult result
    assertEqual 16 (V.length (fst expectedResult))
    assertEqual 15 (V.length (snd expectedResult))

    
    